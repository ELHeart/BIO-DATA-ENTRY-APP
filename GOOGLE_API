from PyQt5.QtWidgets import QApplication, QWidget, QVBoxLayout, QPushButton, QLabel, QLineEdit, QMessageBox, QDialog, QHBoxLayout
import hashlib
import gspread
from oauth2client.service_account import ServiceAccountCredentials

# Function to initialize the Google Sheets connection
def init_google_sheets():
    scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
    creds = ServiceAccountCredentials.from_json_keyfile_name('path_to_your_credentials.json', scope)  # Update the path to your downloaded credentials
    client = gspread.authorize(creds)
    sheet = client.open('your_google_sheet_name').sheet1  # Update with your Google Sheet name
    return sheet

# Function to find a user in the Google Sheet
def find_user(username, hashed_password):
    sheet = init_google_sheets()
    users = sheet.get_all_records()
    for user in users:
        if user['Username'] == username and user['PasswordHash'] == hashed_password:
            return True
    return False

# Function to add a new user to the Google Sheet
def add_user(username, hashed_password):
    sheet = init_google_sheets()
    sheet.append_row([username, hashed_password])

# SignUpDialog class creates a sign-up dialog box
class SignUpDialog(QDialog):
    # ... (rest of the SignUpDialog code remains unchanged) ...

    def register_user(self):
        username = self.username.text()
        password = self.password.text()
        hashed_password = hashlib.sha256(password.encode('utf-8')).hexdigest()

        # Add user to Google Sheets
        add_user(username, hashed_password)

        # Successful data entry alert
        QMessageBox.information(self, "Success", "You have signed up successfully!")
        self.accept()

# Login Dialog Class
class LoginDialog(QDialog):
    # ... (rest of the LoginDialog code remains unchanged) ...

    def check_credentials(self):
        username = self.username.text()
        password = self.password.text()
        hashed_password = hashlib.sha256(password.encode('utf-8')).hexdigest()

        # Check credentials against Google Sheets
        if find_user(username, hashed_password):
            self.accept()  # Closes the dialog box and continues
        else:
            QMessageBox.warning(self, "Login Failed", "Invalid username or password. Please try again.")
            self.username.clear()
            self.password.clear()

# ConfirmDialog Class
# ... (ConfirmDialog code remains unchanged) ...

# BioDataApp Class
class BioDataApp(QWidget):
    # ... (rest of the BioDataApp code remains unchanged) ...

    def submitData(self):
        age = int(self.age.text())
        first_name = self.firstName.text()
        middle_name = self.middleName.text()
        last_name = self.lastName.text()

        # Write data to Google Sheets
        sheet = init_google_sheets()
        sheet.append_row([first_name, middle_name, last_name, age])

        # Show a SUCCESS message box when data is submitted
        QMessageBox.information(self, "Success", "Data submitted successfully!")

        # Clear the form fields for a new entry
        self.firstName.clear()
        self.middleName.clear()
        self.lastName.clear()
        self.age.clear()

# ... (rest of your application code) ...

if __name__ == '__main__':
    app = QApplication([])

    # Shows the sign-up dialog first
    signup = SignUpDialog()
    result = signup.exec_()

    # If the user closes the sign-up dialog or clicks "Sign In", show the login dialog
    if result == QDialog.Rejected:
        login = LoginDialog()
        if login.exec_() == QDialog.Accepted:
            ex = BioDataApp()
            ex.show()
            app.exec_()
    else:
        login = LoginDialog()
        if login.exec_() == QDialog.Accepted:
            ex = BioDataApp()
            ex.show()
            app.exec_()
